#include<iostream>
#include<string>
#include<cstdlib>  // 包括std::rand和std::srand
#include<ctime>    // 包括std::time
using namespace std;

class Character {
protected:
    int dice[6];  // 六面骰子的值
    string name;  // 角色名稱
    string introduction;  // 角色介紹
public:
    // 构造函数
    Character(string theName, int d1, int d2, int d3, int d4, int d5, int d6, string intro) {
        name = theName;
        dice[0] = d1; dice[1] = d2; dice[2] = d3;
        dice[3] = d4; dice[4] = d5; dice[5] = d6;
        introduction = intro;
    }

    // 獲取骰子數字
    int getDiceNum() {
        srand(static_cast<unsigned int>(time(0))); // 注意：理想情況下，srand應該在程序開始時只調用一次。
        int index = rand() % 6;
        return dice[index];
    }
    virtual void display() = 0; // 純虛擬函數，用於顯示角色資訊
    virtual void upgrade() = 0; // 純虛擬函數，用於升級角色
};

class Teacher : public Character {
private:
    string subjectTaught;  // 教授科目
    int yearsOfExperience; // 教學經驗年數
public:
    // 教師构造函数
    Teacher(string theName, int d1, int d2, int d3, int d4, int d5, int d6, string intro, string subject, int experience)
    : Character(theName, d1, d2, d3, d4, d5, d6, intro), subjectTaught(subject), yearsOfExperience(experience)
    {}

    // 重寫display函數
    void display() override {
        cout << "Name: " << name << "\nIntroduction: " << introduction;
        cout << "\nSubject Taught: " << subjectTaught << "\nYears of Experience: " << yearsOfExperience;
        cout << "\nDice: ";
        for (int i = 0; i < 6; ++i) {
            cout << dice[i] << " ";
        }
        cout << "\n\n";
    }

    // 重寫upgradeFunction函數
    void upgrade() override {
        for (int& die : dice) {
            die += yearsOfExperience / 5; // 根據經驗年數增加骰子的值
        }
    }
};

class Student : public Character {
private:
    int grade;           // 年級
    string majorSubject; // 主修科目
public:
    // 學生构造函数
    Student(string theName, int d1, int d2, int d3, int d4, int d5, int d6, string intro, int grade, string major)
    : Character(theName, d1, d2, d3, d4, d5, d6, intro), grade(grade), majorSubject(major)
    {}

    // 重寫displa函數
    void display() override {
        cout << "Name: " << name << "\nIntroduction: " << introduction;
        cout << "\nGrade: " << grade << "\nMajor Subject: " << majorSubject;
        cout << "\nDice: ";
        for (int i = 0; i < 6; ++i) {
            cout << dice[i] << " ";
        }
        cout << "\n\n";
    }


    // 重寫upgradeFunction函數
    void upgrade() override {
        srand(static_cast<unsigned int>(time(0)));
        int index = rand() % 6;
        dice[index] += grade / 10; // 根據分數增加隨機一個骰子的值
    }
};

int main() {
    // 創建不同類型的 Teacher 和 Student
    Teacher mathTeacher("Mr. Smith", 2, 3, 4, 5, 6, 7, "Math Genius", "Math", 10);
    Student mathStudent("Alice", 1, 2, 3, 4, 5, 6, "Avid Learner", 65, "Math");

    Teacher historyTeacher("Mrs. Jones", 1, 3, 4, 4, 4, 6, "History Expert", "History", 8);
    Student historyStudent("Bob", 1, 3, 3, 3, 4, 6, "History Buff", 90, "History");

    Teacher scienceTeacher("Dr. Brown", 2, 2, 3, 5, 5, 6, "Science Wizard", "Science", 15);
    Student scienceStudent("Carol", 2, 2, 3, 4, 4, 5, "Science Enthusiast", 75, "Science");

    // 顯示初始狀態
    cout << "Initial State:\n";
    mathTeacher.display();
    mathStudent.display();
    historyTeacher.display();
    historyStudent.display();
    scienceTeacher.display();
    scienceStudent.display();

    // 執行升級
    cout << "\nAfter Upgrades:\n";
    mathTeacher.upgrade();
    mathStudent.upgrade();
    historyTeacher.upgrade();
    historyStudent.upgrade();
    scienceTeacher.upgrade();
    scienceStudent.upgrade();

    // 顯示升級後的狀態
    mathTeacher.display();
    mathStudent.display();
    historyTeacher.display();
    historyStudent.display();
    scienceTeacher.display();
    scienceStudent.display();

    return 0;
}

